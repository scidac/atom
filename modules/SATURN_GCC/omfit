#%Module
#
# Module file for loading paths for OMFIT
#

proc ModulesHelp { } {
        puts stderr "This modulefile sets the environment for OMFIT"
	puts stderr ""
	puts stderr "OMFIT is a software developed to support both integrated modeling and experimental data analysis."
	puts stderr ""
	puts stderr "The main idea at the heart of OMFIT is to treat files, data, and scripts as a uniform collection "
	puts stderr "of objects organized into a tree structure. The OMFIT framework provides a consistent way to "
	puts stderr "access and manipulate such a collection of heterogeneous objects, independent of their origin. "
	puts stderr ""
	puts stderr "https://omfit.io"
	puts stderr ""
}

conflict omfit atom
module-whatis omfit

module load python/2.7
module load mdsplus
module load gcc-4.7.2
module load fann
module load pact
module load pyual

set atom_root $::env(ATOM_ROOT)
set omfit_root $::env(ATOM_ROOT)/OMFIT-source

setenv OMFIT_ROOT $omfit_root
setenv OMFIT_TMPDIR /local-scratch/
setenv OMFIT_GLOBAL_TMPDIR /cluster-scratch/

prepend-path PATH /fusion/usc/opt/python/2.7.11/bin/
prepend-path PATH $atom_root/miniconda3/bin/
prepend-path PATH $atom_root/miniconda2/bin/
prepend-path PATH $omfit_root/bin/

prepend-path PYTHONPATH $omfit_root/

if { ! [ file exists /fusion/projects/omfit-results/$::env(USER) ] } {
    file mkdir /fusion/projects/omfit-results/$::env(USER)
}
file attributes /fusion/projects/omfit-results/$::env(USER) -permissions og-w

catch { exec chmod  og-w {*}[glob /fusion/projects/omfit-results/$::env(USER)/projects/*.zip] }
exec chmod  og-w /fusion/projects/omfit-results/$::env(USER)/
